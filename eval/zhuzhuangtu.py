import numpy as np
import matplotlib.pyplot as plt

from mpl_toolkits.axes_grid1.inset_locator import inset_axes
from matplotlib.patches import ConnectionPatch
import os  # 导入os库
#
# x = np.linspace(0, 10, 30)  # 产生0-10之间30个元素的等差数列
# noise = np.random.randn(30)  # 产生30个标准正态分布的元素
# y1 = x ** 2 + 2 * noise  # //产生叠加噪声的数据系列1
# y2 = x ** 1 + 2 * noise  # 产生叠加噪声的数据系列2
# y3 = x ** 1.5 + 2 * noise  # 产生叠加噪声的数据系列3\n"

if __name__ == '__main__':
    # x = np.ones(17)
    # y = np.array([0.0511114945545633, 0.0442262767946960, 0.0503159858316919, 0.0575127922438698, 0.0645916500318459,
    #               0.0709401422127073, 0.0757549300761529, 0.0810414941313504, 0.0814863695188319, 0.0761926985258914,
    #               0.0725682609548190, 0.0660696093540102, 0.0592031085132468, 0.0517236506904374, 0.0448257948152664,
    #               0.0516801380484292, 0.000755603702190124])
    # plt.rcParams['font.sans-serif'] = 'SimHei'  # 设置字体为SimHei显示中文\n",
    # plt.rc('font', size=14)  # 设置图中字号大小\n",
    # plt.figure(figsize=(6, 4))  # 设置画布\n",
    # plt.bar(x, y, width=0.2)  # 绘制柱状图\n",
    # plt.title('柱状图')  # 添加标题\n",
    # plt.xlabel('x')  # 添加横轴标签\n",
    # plt.ylabel('y1')  # 添加y轴名称\n",
    # # path = 'D:\\my_python\\ch3\\output\\'
    # # if not os.path.exists(path):
    # #     os.makedirs(path)
    # # plt.savefig(path + 'scatter.jpg')  # 保存图片
    # # plt.savefig(path + 'plot.jpg')  # 保存图片\n",
    # plt.show()


    size = 16
    # 返回size个0-1的随机数
    a = np.array([0.0511114945545633, 0.0442262767946960, 0.0503159858316919, 0.0575127922438698, 0.0645916500318459,
                  0.0709401422127073, 0.0757549300761529, 0.0810414941313504, 0.0814863695188319, 0.0761926985258914,
                  0.0725682609548190, 0.0660696093540102, 0.0592031085132468, 0.0517236506904374, 0.0448257948152664,
                  0.0516801380484292, 0.000755603702190124])
    blender_teeth=np.array([	0.0215819273786514	,0.0228191701903113,	0.0327617075320880,	0.0479719087773215	,0.0595351271629195,	0.0816586590750518	,0.0755268181703939	,0.0768343144446184	,0.0746966764985080,	0.0674762171120255	,0.0801103158253715,	0.0808423166629249	,0.0795750627589776,	0.0770368064366575	,0.0735224822552237,	0.0480504897189557])
    blender_head=np.array([		0.0552420422406413	,0.0569782952605814	,0.0620401458351135,	0.0681204629793709,	0.0714647950756474,	0.0753881048891960	,0.0758797784056151	,0.0777556439507154,	0.0795763569836621,	0.0805890115173532	,0.0806875069790805,	0.0753488427308804	,0.0681566954593283,	0.0515115188989481,	0.0189913223828804	,0.00226947641098613])
    b = np.array([0.0219775741577148,	0.0295291244506836,	0.0386089813232422,	0.0499389434814453,	0.0624693466186524	,0.0756827774047852,	0.0931751815795898,	0.136899774169922	,0.138377146911621	,0.0928711166381836,	0.0740763229370117	,0.0598080810546875	,0.0470428070068359	,0.0353362930297852,	0.0255846847534180	,0.0185978622436523	,2.39822387695313e-05])

    # x轴坐标, size=5, 返回[0, 1, 2, 3, 4]
    x = np.arange(size)

    # 有a/b/c三种类型的数据，n设置为3
    total_width, n = 0.4, 2
    # 每种类型的柱状图宽度
    width = total_width / n

    # 重新设置x轴的坐标
    # x = x - (total_width - width)
    # print(x)


    # 画柱状图
    plt.bar(x, blender_teeth, width=width, label="dental model")
    plt.bar(x + width, blender_head, width=width, label="head model")
    # plt.bar(x + 2 * width, c, width=width, label="c")
    x_labels = [ "order 1", "order 2", "order 3", "order 4","order 5","order 6","order 7","order 8","order 9","order 10","order 11","order 12","order 13","order 14","order 15","order 16"]
    # 用第1组...替换横坐标x的值
    plt.xticks(x, x_labels)
    plt.title('Frequency  of each category in the data set')  # 添加标题\n",
    plt.xlabel('Fringe-order')  # 添加横轴标签\n",
    plt.ylabel('Frequency')  # 添加y轴名称\n",
    # 显示图例
    plt.legend()
    # 显示柱状图
    plt.show()
